
DATABASE / POSTGRES POD SETUP

To startup DB deloyment and service
# ./db-startup.sh

To connect and test DB 
1. Navigate to GKE Menu > Services & Ingress
2. click on 'db'
3. Under 'Service Details' scroll down to 'Ports'
4. Click on 'Port Forwarding' for port 5432
5. In the dialog that appears click on 'Run in cloud shell'
6. The command for port forwading is pasted into cloud shell; click enter. This starts the port forwarding of 5432 to 8080 on localhost
7. Open a new tab/window in cloudshell and enter the following in this new shell
   # psql -h localhost -U admin -d pulp_db -p 8080 --password 
8. You should be in the postgres db

To delete db service and deployment
# ./delete-db.sh


BACKEND

1. Build the backend

# cd <pulp dir>/backend
# export PROJECT_ID=<set project id>
# docker build -t gcr.io/${PROJECT_ID}/pulp-backend:v1 .

2. Push the backend to gcr.io
# docker push gcr.io/${PROJECT_ID}/pulp-backend:v1

3. Deploy 
cd <pulp dir>/k8s-deployment
kubectl create -f ./backend-config.yaml
kubectl create -f ./backend-claim.yaml
kubectl create -f ./backend-deployment.yaml
kubectl create -f ./backend-service.yaml

FRONTEND

1. Build the frontend

# cd <pulp dir>/frontend
# export PROJECT_ID=<set project id>
# docker build -t gcr.io/${PROJECT_ID}/pulp-frontend:v1 .

2. Push the frontend to gcr.io
# docker push gcr.io/${PROJECT_ID}/pulp-frontend:v1

3. Deploy 
cd <pulp dir>/k8s-deployment
kubectl create -f ./frontend-deployment.yaml
kubectl create -f ./fronend-service.yaml


NODE

1. Build the node 

# cd <pulp dir>/node
# export PROJECT_ID=<set project id>
# docker build -t gcr.io/${PROJECT_ID}/pulp-node:v1 .

2. Push the frontend to gcr.io
# docker push gcr.io/${PROJECT_ID}/pulp-node:v1

3. Deploy 
cd <pulp dir>/k8s-deployment
kubectl create -f ./node-claim0.yaml
kubectl create -f ./node-claim1.yaml
kubectl create -f ./node-deployment.yaml
kubectl create -f ./node-service.yaml
